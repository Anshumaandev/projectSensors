const WestimatePosition = (inputArray) => {
    let prevVelocityVal = 0;
    let prevPosVal = 0;
    let pprevPosVal = 0;
    let prevTs = 0;
    let pprevTs = -1;
    let prevAccelVal = 0;
    let deltaResistance = 0.03;

    const data = [];

    for (let i = 0; i < inputArray.length; i++) {
        // const [accelValStr, , timeStr, , AccelValX, , AccelValY, , AccelValZ] = inputArray[i].split(",");
        const [accelValStr, , timeStr] = inputArray[i].split(",");
        const accelVal = parseFloat(accelValStr);
        const time = parseFloat(timeStr);
        // const AccelValueX = parseFloat(AccelValX);
        // const AccelValueY = parseFloat(AccelValY);
        // const AccelValueZ = parseFloat(AccelValZ);

        if (time === prevTs || time === pprevTs) {
            data.push([prevPosVal, accelVal]);
        } else if (prevTs === 0) {
            prevTs = time;
            data.push([prevPosVal, accelVal]);
        } else {
            let dT = time - prevTs;
            let pdT = prevTs - pprevTs;
            // console.log("HEREEEE", prevVelocityVal, accelVal, prevAccelVal, dT, prevPosVal, pprevPosVal, dT, pdT)
            console.log("HEREEEE", prevVelocityVal, ',', accelVal, ',', prevAccelVal, ',', dT)
            let AveragingAccelValues = 0.5 * (accelVal + prevAccelVal) * dT
            // let MultiplyingAvgValuestodT = AveragingAccelValues 
            let vel = (prevVelocityVal + AveragingAccelValues);
            // let vel = (prevVelocityVal + (0.5 * (accelVal + prevAccelVal) * dT));
            let pos = (prevPosVal + ((1 - deltaResistance) * (prevPosVal - pprevPosVal) * (dT / pdT)) + accelVal * dT * dT);
            console.log("VELOCITYY----", vel)
            data.push([pos, accelVal, vel, prevVelocityVal, prevAccelVal, dT,]);
            prevPosVal = pos;
            pprevPosVal = prevPosVal;
            pprevTs = prevTs;
            prevTs = time;
            prevVelocityVal = vel;
            prevAccelVal = accelVal;
            // data.push([pos, accelVal, vel, prevVelocityVal, prevAccelVal, dT, AccelValueX, AccelValueY, AccelValueZ]);
            // console.log("HEREEEE bottom", prevVelocityVal, ',', accelVal, ',', prevAccelVal, ',', dT)
        }
    }

    return data;
};

// Example usage:
const input = ["0.03346466144762896,,1684875402157 ", "0.012885483031781142,,1684875402257 ", "-0.002621917584261624,,1684875402357 ", "-0.0485618845820305,,1684875402458 ", "-0.14769402502811121,,1684875402558 ", "-0.28973926105654524,,1684875402659 ", "-0.39287534735450647,,1684875402759 ", "-0.3556963678112979,,1684875402859 ", "-0.34835365291005027,,1684875402960 ", "-0.20546487902124433,,1684875403060 ", "-0.14444144161031733,,1684875403160 ", "0.057696576842988456,,1684875403261 ", "0.22027430330116857,,1684875403361 ", "0.37767120250017056,,1684875403462 ", "0.5129335590526949,,1684875403562 ", "0.6871345546881849,,1684875403662 ", "0.6616892880081864,,1684875403763 ", "0.5656885580074499,,1684875403863 ", "0.45802256660744234,,1684875403963 ", "0.32996081872032346,,1684875404064 ", "0.277311136152981,,1684875404164 ", "-0.11839788353220149,,1684875404264 ", "-0.20462995408739754,,1684875404365 ", "-0.3765794136697932,,1684875404465 ", "-0.5851274783787009,,1684875404566 ", "-0.7334379898787937,,1684875404666 ", "-0.8389893431888353,,1684875404766 ", "-0.840082951372129,,1684875404867 ", "-0.8006598516666182,,1684875404967 ", "-0.6346564218532601,,1684875405067 ", "-0.5244668476791849,,1684875405168 ", "0.30433613605359594,,1684875405268 ", "0.4294412136315605,,1684875405368 ", "0.5426749786483143,,1684875405469 ", "0.68961837301173,,1684875405569 ", "0.8648850614114452,,1684875405669 ", "0.9870165764123981,,1684875405770 ", "1.1425360815486214,,1684875405870 ", "1.2259480583524822,,1684875405971 ", "1.1457993260522072,,1684875406071 ", "1.0298625123751797,,1684875406171 ", "-0.5878806183330679,,1684875406272 ", "-0.6815084113658207,,1684875406372 ", "-0.7812767056022565,,1684875406472 ", "-0.9471620190948592,,1684875406573 ", "-1.158579182673566,,1684875406673 ", "-1.3620478338102768,,1684875406774 ", "-1.5594223374772485,,1684875406874 ", "-1.6022697837426876,,1684875406974 ", "-1.4401595907262994,,1684875407075 ", "-1.3581039397386827,,1684875407175 ", "0.5077273555928595,,1684875407275 ", "0.5825089568144246,,1684875407376 ", "0.6933364826127413,,1684875407476 ", "0.7491508543986708,,1684875407577 ", "0.958930552641684,,1684875407677 ", "1.131949078531899,,1684875407777 ", "1.2582130714098434,,1684875407878 ", "1.447837564707504,,1684875407978 ", "1.3906597083096472,,1684875408078 ", "1.341349025843125,,1684875408179 ", "-0.7893656431517213,,1684875408279 ", "-0.9335732919522094,,1684875408379 ", "-1.0540323553316844,,1684875408480 ", "-1.171600396814927,,1684875408580 ", "-1.3144555655201813,,1684875408681 ", "-1.5790689416499404,,1684875408781 ", "-1.7660880420079839,,1684875408881 ", "-1.9160266990559454,,1684875408982 ", "-2.161393720010429,,1684875409082 ", "-2.0651308232767,,1684875409182 ", "1.0810837031795526,,1684875409283 ", "1.3281928395846685,,1684875409383 ", "1.4801771276819076,,1684875409483 ", "1.5983033322550066,,1684875409584 ", "1.6701374616739844,,1684875409684 ", "1.884721357507494,,1684875409785 ", "2.0378498484854513,,1684875409885 ", "2.142854596658768,,1684875409985 ", "2.281230060991587,,1684875410086 ", "2.2011748762642975,,1684875410186 ", "-1.0177620533964706,,1684875410286 ", "-1.0781507781983382,,1684875410387 ", "-1.1482276418588064,,1684875410487 ", "-1.269702128892479,,1684875410588 ", "-1.4782357604750396,,1684875410688 ", "-1.7714669025749594,,1684875410788 ", "-1.9495994065677607,,1684875410889 ", "-2.152828383592639,,1684875410989 ", "-2.4003185717360376,,1684875411089 ", "-2.451940035091938,,1684875411190 ", "1.2565754654429502,,1684875411290 ", "1.4929652522716008,,1684875411390 ", "1.7982613572028345,,1684875411491 ", "1.9159664067343958,,1684875411591 ", "2.040798428209616,,1684875411692 ", "2.059890458812627,,1684875411792 ", "2.298574383678754,,1684875411892 ", "2.413544152083559,,1684875411993 ", "2.597284211837297,,1684875412093 ", "2.819743816684431,,1684875412193 ", "-1.4383471819579978,,1684875412294 ", "-1.5420990176188518,,1684875412394 ", "-1.6468911027367241,,1684875412494 ", "-1.8225242028515898,,1684875412595 ", "-2.01876117084129,,1684875412695 ", "-2.2138473951843345,,1684875412796 ", "-2.4238724755524133,,1684875412896 ", "-2.685768851551443,,1684875412996 ", "-2.799020613121537,,1684875413097 ", "-2.949040029744917,,1684875413197 ", "1.5547974443935757,,1684875413297 ", "1.7802188008194448,,1684875413398 ", "2.0485706053576367,,1684875413498 ", "2.260466143710539,,1684875413599 ", "2.4370116665771966,,1684875413699 ", "2.659462292922243,,1684875413799 ", "2.8199434944922532,,1684875413900 ", "2.9257803367940145,,1684875414000 ", "3.0669933863352634,,1684875414100 ", "3.1415794876853402,,1684875414201 ", "-1.614911091387326,,1684875414301 ", "-1.6642901638584995,,1684875414402 ", "-1.6900254299627164,,1684875414502 ", "-1.7226369816874816,,1684875414602 ", "-1.951282673839098,,1684875414703 ", "-2.1206317384538003,,1684875414803 ", "-2.2320110785460594,,1684875414903 ", "-2.4060530429626064,,1684875415004 ", "-2.399889552738171,,1684875415104 ", "-2.3870509833628306,,1684875415204 ", "0.763669082212795,,1684875415305 ", "0.7729998003931117,,1684875415405 ", "0.8024019985238802,,1684875415506 ", "0.7901208887795557,,1684875415606 ", "0.7971751873306099,,1684875415706 ", "0.7927575888523233,,1684875415807 ", "0.7995714241310893,,1684875415907 ", "0.7942550955211425,,1684875416007 ", "0.7876279381191406,,1684875416108 ", "0.7934131954087256,,1684875416208 ", "-0.031083882496590932,,1684875416309 ", "-0.042585751762845445,,1684875416409 ", "-0.03800655153809664,,1684875416509 ", "-0.01889454554049763,,1684875416610 ", "-0.041398000581386894,,1684875416710 ", "-0.0443275503241777,,1684875416811 ", "-0.04139880686684148,,1684875416911 ", "-0.04258701363588209,,1684875417011 "];
const data = WestimatePosition(input);
console.log(data);

const fs = require('fs');

let csvContent = "position,accelValues,Velocity,prevVelocityVal,prevAccelVal,dT\n" + data.map(e => e.join(",")).join("\n");

fs.writeFile("output.csv", csvContent, 'utf8', function (err) {
    if (err) {
        console.log("An error occurred while writing to the file.");
        console.log(err);
    } else {
        console.log("Successfully wrote to the file.");
    }
});